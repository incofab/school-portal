import React from 'react';
import ServerPaginatedTable from '@/components/server-paginated-table';
import { PaginationResponse } from '@/types/types';
import Slab, { SlabBody, SlabHeading } from '@/components/slab';
import { ServerPaginatedTableHeader } from '@/components/server-paginated-table';
import ManagerDashboardLayout from '@/layout/managers/manager-dashboard-layout';
import DateTimeDisplay from '@/components/date-time-display';
import { PinGenerator } from '@/types/models';
import { LinkButton } from '@/components/buttons';
import route from '@/util/route';

interface Props {
  pinGenerators: PaginationResponse<PinGenerator>;
}

export default function ListPinGenerators({ pinGenerators }: Props) {
  const headers: ServerPaginatedTableHeader<PinGenerator>[] = [
    {
      label: 'Institution',
      value: 'institution.name',
    },
    {
      label: 'Num of Pins',
      value: 'num_of_pins',
    },
    {
      label: 'Generated By',
      value: 'user.full_name',
    },
    {
      label: 'Comment',
      value: 'comment',
    },
    {
      label: 'Generated At',
      value: 'created_at',
      render: (row) => <DateTimeDisplay dateTime={row.created_at} />,
    },
    {
      label: 'Action',
      render: (row) => (
        <LinkButton
          variant={'link'}
          href={route('pins.index', [row.id])}
          title="View Pins"
        />
      ),
    },
  ];

  return (
    <ManagerDashboardLayout>
      <Slab>
        <SlabHeading title="Result Pins" />
        <SlabBody>
          <ServerPaginatedTable
            scroll={true}
            headers={headers}
            data={pinGenerators.data}
            keyExtractor={(row) => row.id}
            paginator={pinGenerators}
          />
        </SlabBody>
      </Slab>
    </ManagerDashboardLayout>
  );
}
