{"version":3,"sources":["components/calculator/calculator.js","config/k.js","config/startup.js","components/body/exam_tab/examTab.js","components/body/question/question.js","components/footer/footer.js","helpers/ExamSync.js","helpers/TimerHandler.js","helpers/ExamHandler.js","components/header/timer.js","components/header/PageHeader.js","helpers/FormatExam.js","components/body/option/option.js","components/body/question/subject_page.js","config/my_templates.js","redux/reducer.js","redux/store.js","helpers/ExamActions.js","App.js","reportWebVitals.js","index.js"],"names":["calculator","props","state","display","input","bind","operator","equal","closeCalculator","this","dispatch","type","K","ACTION_TOGGLE_CALCULATOR","payload","show_calculator","e","target","attributes","getNamedItem","value","setState","result","eval","err","id","className","onClick","readOnly","size","data-input","Component","mapStateToProps","connect","undefined","window","dev","BASE_ADDR","process","ACTION_TAB_CHANGED","ACTION_ANSWER_SELECTED","ACTION_QUESTION_NAVIGATED","ACTION_ANSWERS_UPLOADED","ACTION_PAUSE_EXAM","ACTION_PLAY_EXAM","EXAM_STATE_PAUSED","EXAM_STATE_PLAYING","ADDR_ATTEMPT_QUESTION","ADDR_PAUSE_EXAM","ADDR_SUBMIT_EXAM","ADDR_EXAM_BASE_IMG","ADDR_VIEW_EXAM_RESULT","getImageAddr","courseId","course_session_id","fileName","year","event_id","handleExamImgs","html","subject","$htmlparsed","$","parseHTML","find","each","i","ele","$img","src","attr","imgAddr","course_id","session_id","formatTime","time_in_secs","isNaN","total_mins","hour","parseInt","min","sec","data","mainContent","gProps","examSync","attemptsToUpload","attemptData","question_id","multipleAttemtps","questionId","Object","hasOwnProperty","call","attempt","JSON","stringify","attemptsUploading","Data","user_id","exam_no","student_id","token","url","fetch","method","headers","body","then","response","console","log","json","catch","error","addMultiAttempts","location","href","redirect","postData","TimerHandler","pingInterval","pingCounter","reset","updateCallbackFn","duration","callback","timeElapsedCallbackFn","evaluateTime","intervalId","setInterval","timeElapsed","uploadNow","timeRemaining","stop","clearInterval","start","examHandler","attempted_questions_to_upload","exam_subject_id","addToAttemptedQuestions","newAttempt","filter","push","timerHandler","Timer","timerString","timer","updateTimer","setUpdateCallback","timeRemaing","firstname","lastname","align","confirm","pauseExam","data-toggle","data-placement","title","tabSelected","tab_index","selected_tab","currentTab","current_tab","tabs","exam_data","all_exam_subject_data","map","index","data-tab_index","role","course_title","FormatExam","questionIndex","questionNo","course_code","general_instructions","instructions","passages","attempted_questions","questions","currentQuestion","question_no","question","option_a","option_b","option_c","option_d","option_e","length","formatInstruction","formatPassage","dangerouslySetInnerHTML","__html","formatOption","option","optionText","name","data-selection","OptionComponent","answerSelected","checkChanged","getAttempt","subject_state_data","all_exam_subjects_state_data","checked","onChange","subjectPage","examFormater","isAttempted","tabIndex","subjectData","questionNoSelected","question_index","questionDisplay","current_question_index","tiles","data-question_no","data-question_id","data-question_index","getCurrentQuestionIndex","gotoNextQuestion","gotoPreviousQuestion","submit","style","width","attempt_template","subject_data_template","initialStore","parse","iStore","forEach","Templates","reducer","action","p","atcNewState","newState","produce","draftState","addAttempt","Store","createStore","Reducer","examActions","store","currentState","getState","durationInSec","meta","time_remaining","App","document","addEventListener","keyListener","removeEventListener","key","PageHeader","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab6af081.chunk.js","sourcesContent":["import './calculator.css'\r\nimport {connect} from 'react-redux'\r\nimport K from '../../config/k'\r\nimport React, { Component } from 'react'\r\n\r\nexport class calculator extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {display: ''}\r\n        this.input = this.input.bind(this);\r\n        this.operator = this.operator.bind(this);\r\n        this.equal = this.equal.bind(this);\r\n        this.closeCalculator = this.closeCalculator.bind(this);\r\n    }\r\n\r\n    closeCalculator() {\r\n        this.props.dispatch({\r\n            type: K.ACTION_TOGGLE_CALCULATOR,\r\n            payload: {\r\n                show_calculator: false\r\n            }\r\n        })\r\n    }\r\n\r\n    input(e){\r\n        var input = e.target.attributes.getNamedItem('data-input').value;        \r\n        \r\n        this.setState({\r\n            display: this.state.display + input,\r\n        })\r\n    }\r\n    \r\n    equal(){\r\n        try{ \r\n            var result = eval(this.state.display);\r\n            \r\n            this.setState({\r\n                display: result,\r\n            })\r\n        }catch(err) {\r\n            this.setState({\r\n                display: 'Error',\r\n            })\r\n        } \r\n    }\r\n    \r\n    operator(e){\r\n        var input = e.target.attributes.getNamedItem('data-input').value;\r\n        \r\n        if(input === \"=\")\r\n        {\r\n            this.equal();\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            display: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div id=\"examdriller-calculator\" \r\n                className={'s '+(this.props.show_calculator ? 'show' : '')}>\r\n                <div className=\"clearfix\">\r\n                    <button className=\"btn btn-secondary btn-sm toggleCalculator pointer mb-1 mr-1 w-100\" \r\n                    onClick={this.closeCalculator}\r\n                    id=\"close-calculator\">&times; close</button>\r\n                </div>\r\n                <div className=\"box\" >\r\n                    <div className=\"display\">\r\n                        <input type=\"text\" readOnly size=\"18\" id=\"d\"\r\n                            value={this.state.display}/>\r\n                    </div>\r\n                    <div className=\"keys\">\r\n                        <p>\r\n                            <input type=\"button\" className=\"button gray\" value=\"mrc\" \r\n                                data-input=\"\" onClick={this.operator}/>\r\n                            <input type=\"button\" className=\"button gray\" value=\"m-\" \r\n                                data-input=\"\" onClick={this.operator}/>\r\n                            <input type=\"button\" className=\"button gray\" value=\"m+\" \r\n                                data-input=\"\" onClick={this.operator}/>\r\n                            <input type=\"button\" className=\"button pink\" value=\"/\" \r\n                                data-input=\"/\" onClick={this.input}/>\r\n                        </p>\r\n                        <p>\r\n                            <input type=\"button\" className=\"button black\" value=\"7\"\r\n                                data-input=\"7\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"8\" \r\n                                data-input=\"8\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"9\" \r\n                                data-input=\"9\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button pink\" value=\"&times;\" \r\n                                data-input=\"*\" onClick={this.input}/>\r\n                        </p>\r\n                        <p>\r\n                            <input type=\"button\" className=\"button black\" value=\"4\" \r\n                                data-input=\"4\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"5\" \r\n                                data-input=\"5\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"6\" \r\n                                data-input=\"6\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button pink\" value=\"-\" \r\n                                data-input=\"-\" onClick={this.input}/>\r\n                        </p>\r\n                        <p>\r\n                            <input type=\"button\" className=\"button black\" value=\"1\" \r\n                                data-input=\"1\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"2\" \r\n                                data-input=\"2\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"3\" \r\n                                data-input=\"3\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button pink\" value=\"+\" \r\n                                data-input=\"+\" onClick={this.input}/>\r\n                        </p>\r\n                        <p>\r\n                            <input type=\"button\" className=\"button black\" value=\"0\" \r\n                                data-input=\"0\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\".\" \r\n                                data-input=\".\" onClick={this.input}/>\r\n                            <input type=\"button\" className=\"button black\" value=\"C\" \r\n                                data-input=\"\" onClick={this.operator}/>\r\n                            <input type=\"button\" className=\"button orange\" value=\"=\" \r\n                                data-input=\"=\" onClick={this.operator}/>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        show_calculator: state.show_calculator,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(calculator);\r\n\r\n","\r\nif (window.dev === undefined) window.dev = true;\r\n\r\nexport const BASE_ADDR = process.env.REACT_APP_BASE_URL;\r\n\r\nconst K = {\r\n\r\n    ACTION_TAB_CHANGED: 'Nav Tab Changed',\r\n    ACTION_ANSWER_SELECTED: 'Answer Selected',\r\n    ACTION_QUESTION_NAVIGATED: 'Question Navigated',\r\n    ACTION_ANSWERS_UPLOADED: 'Answers Uploaded', // To be called when selected answers has been uploaded to server\r\n    ACTION_TOGGLE_CALCULATOR: 'Toggle Calculator',\r\n    ACTION_PAUSE_EXAM: 'Pause Exam',\r\n    ACTION_PLAY_EXAM: 'Play Exam',\r\n\r\n    EXAM_STATE_PAUSED: 'Paused',\r\n    EXAM_STATE_PLAYING: 'Playing',\r\n\r\n    ADDR_ATTEMPT_QUESTION: BASE_ADDR + process.env.REACT_APP_ADDR_ATTEMPT_QUESTION,\r\n    ADDR_PAUSE_EXAM: BASE_ADDR + process.env.REACT_APP_ADDR_PAUSE_EXAM,\r\n    ADDR_SUBMIT_EXAM: BASE_ADDR + process.env.REACT_APP_ADDR_SUBMIT_EXAM,\r\n    \r\n    ADDR_EXAM_BASE_IMG: BASE_ADDR + process.env.REACT_APP_ADDR_EXAM_BASE_IMG,\r\n    ADDR_VIEW_EXAM_RESULT: BASE_ADDR + process.env.REACT_APP_ADDR_VIEW_EXAM_RESULT,\r\n\r\n    getImageAddr(courseId, course_session_id, fileName, year) {\r\n        var imgAddr = K.ADDR_EXAM_BASE_IMG\r\n            +`?course_id=${courseId}&course_session_id=${course_session_id}`\r\n            +`&filename=${fileName}&session=${year}&event_id=${window.event_id}`;\r\n            \r\n        return imgAddr;\r\n    },\r\n\r\n    handleExamImgs(html, subject) {   \r\n        // return html;     \r\n        var $htmlparsed = window.$(window.$.parseHTML('<div>'+html+'</div>'));\r\n        \r\n        // window.$($htmlparsed).find('img').each(function(i, ele) {\r\n        $htmlparsed.find('img').each(function(i, ele) {\r\n            var $img = window.$(ele);\r\n            var src = $img.attr('src');\r\n            // var alt = $img.attr('alt');\r\n\r\n            var imgAddr = K.getImageAddr(subject.course_id, subject.session_id,\r\n                src, subject.year);\r\n\r\n            $img.attr('src', imgAddr);\r\n        });\r\n\r\n        return $htmlparsed.html()+\"\";\r\n    },\r\n\r\n    formatTime(time_in_secs) {\r\n\r\n        if (isNaN(time_in_secs) || time_in_secs < 0) time_in_secs = 0\r\n\r\n        var total_mins = time_in_secs / 60;\r\n        var hour = parseInt((total_mins / 60) + '');\r\n        var min = parseInt((total_mins % 60) + '');\r\n        var sec = parseInt((time_in_secs % 60) + '');\r\n        sec = sec < 10 ? ('0' + sec) : sec;\r\n\r\n        if (hour < 1 && min < 1) return sec;\r\n\r\n        min = min < 10 ? ('0' + min) : min;\r\n\r\n        if (hour < 1) return min + ':' + sec;\r\n\r\n        hour = hour < 10 ? ('0' + hour) : hour;\r\n\r\n        return hour + ':' + min + ':' + sec;\r\n    }\r\n\r\n}\r\n\r\nexport default K;","\r\nvar data = window.mainContent;\r\n\r\nconst demoData = {\r\n\t\"exam_data\": {\r\n\t\t\"all_exam_subject_data\": [\r\n\t\t\t{\r\n\t\t\t\t\"exam_subject_id\": 1,\r\n\t\t\t\t\"session_id\": 16,\r\n\t\t\t\t\"course_code\": \"ENG JSS\",\r\n\t\t\t\t\"course_title\": \"English JSS\",\r\n\t\t\t\t\"year\": \"2019\",\r\n                'course_id': 4,\r\n\t\t\t\t\"general_instructions\": \"Answer all questions\",\r\n\t\t\t\t\"instructions\": [],\r\n\t\t\t\t\"passages\": [],\r\n\t\t\t\t\"attempted_questions\": {\r\n\t\t\t\t\t'421': {'question_id': 421, 'attempt': 'B'},\r\n\t\t\t\t\t'422': {'question_id': 422, 'attempt': 'C'} \r\n\t\t\t\t}\r\n\t\t\t\t,\r\n\t\t\t\t\"questions\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 421,\r\n\t\t\t\t\t\t\"question_no\": 1,\r\n\t\t\t\t\t\t\"question\": \"<p>The students listen ________ to their teacher.<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>patiently<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>elegantly<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>attentively<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>focused<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 422,\r\n\t\t\t\t\t\t\"question_no\": 2,\r\n\t\t\t\t\t\t\"question\": \"<p>The crops failed _______ the rain were quite good.<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>since<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>because<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>although<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>however<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 423,\r\n\t\t\t\t\t\t\"question_no\": 3,\r\n\t\t\t\t\t\t\"question\": \"<p>The teacher was _________ about the story Ola told her<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>looking<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>seeing<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>skeptical<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>painstakingly<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 424,\r\n\t\t\t\t\t\t\"question_no\": 4,\r\n\t\t\t\t\t\t\"question\": \"<p>The managing director did not pay his staff last month _________ ?<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>didn't he<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>had he not<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>is not it<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>did he<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 425,\r\n\t\t\t\t\t\t\"question_no\": 5,\r\n\t\t\t\t\t\t\"question\": \"<p>She doesn't have to attend the lecture ________ ?<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>doesn't she<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>is she<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>does she&nbsp;<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>has she<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"exam_subject_id\": 2,\r\n\t\t\t\t\"session_id\": 2,\r\n\t\t\t\t\"course_code\": \"ENG SSS\",\r\n\t\t\t\t\"course_title\": \"English SSS\",\r\n\t\t\t\t\"year\": \"2019\",\r\n\t\t\t\t\"general_instructions\": \"Answer all questions\",\r\n\t\t\t\t\"instructions\": [],\r\n\t\t\t\t\"passages\": [],\r\n\t\t\t\t\"attempted_questions\": [],\r\n\t\t\t\t\"questions\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 31,\r\n\t\t\t\t\t\t\"question_no\": 1,\r\n\t\t\t\t\t\t\"question\": \"<p>The car belongs to Mrs Smith. it is _____________<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>hers<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>her's<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>hers'<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>her<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 32,\r\n\t\t\t\t\t\t\"question_no\": 2,\r\n\t\t\t\t\t\t\"question\": \"<p>These boxes are bigger than __________ over there.<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>this<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>them<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>those<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>these<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 33,\r\n\t\t\t\t\t\t\"question_no\": 3,\r\n\t\t\t\t\t\t\"question\": \"<p>This is __________ than that.<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>heavier<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>more heavy<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>most heavy<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>heaviest<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 34,\r\n\t\t\t\t\t\t\"question_no\": 4,\r\n\t\t\t\t\t\t\"question\": \"<p>Of the three girls, Tola is the _________&nbsp;<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>beautiful<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>most beautiful<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>beautifullest<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>more beautiful<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"question_id\": 35,\r\n\t\t\t\t\t\t\"question_no\": 5,\r\n\t\t\t\t\t\t\"question\": \"<p>It is Kunle who ________ done this<\\/p>\",\r\n\t\t\t\t\t\t\"option_a\": \"<p>have<\\/p>\",\r\n\t\t\t\t\t\t\"option_b\": \"<p>had&nbsp;<\\/p>\",\r\n\t\t\t\t\t\t\"option_c\": \"<p>having<\\/p>\",\r\n\t\t\t\t\t\t\"option_d\": \"<p>has<\\/p>\",\r\n\t\t\t\t\t\t\"option_e\": \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"meta\": {\r\n\t\t\t\"time_remaining\": 2700\r\n\t\t}\r\n\t},\r\n\t/*\r\n\t\"student_data\": { //Student_data not useed\r\n\t\t\"firstname\": \"Ciroma\",\r\n\t\t\"lastname\": \"Chukwuma Adekunle\",\r\n\t\t\"user_id\": \"11111111\",\r\n\t\t\"exam_no\": \"00000000\"\r\n\t},\r\n\t*/\r\n\t\"data\": {\r\n\t\t\"firstname\": \"Ciroma\",\r\n\t\t\"lastname\": \"Chukwuma Adekunle\",\r\n\t\t\"user_id\": \"\",\r\n\t\t\"exam_no\": \"00000000\",\r\n\t\t\"token\": \"ewmedijemiw943ne89232jdmsadnci23\"\r\n\t}\r\n}\r\n\r\nif(!data) data = demoData;\r\n//console.log(data);\r\nexport default data;","import Data from '../../../config/startup';\r\nimport {connect} from 'react-redux'\r\nimport K from '../../../config/k'\r\n\r\nvar gProps;\r\n\r\nconst tabSelected = (e) => {\r\n    var tab_index = e.target.attributes.getNamedItem('data-tab_index').value;\r\n    \r\n    gProps.dispatch({\r\n        type: K.ACTION_TAB_CHANGED,\r\n        payload: {\r\n            selected_tab: tab_index\r\n        }\r\n    });\r\n}\r\n\r\nconst examTab = (props) => {\r\n    gProps = props;\r\n    \r\n    var tabs = Data.exam_data.all_exam_subject_data.map((subject, index) => (\r\n        \r\n        <li className=\"nav-item\" key={'exam-tab-'+index} >\r\n            <div className={'nav-link text-primary cursor-pointer '\r\n                +((props.currentTab==index)?'active':'')} \r\n                data-tab_index={index}\r\n                data-toggle=\"tab\" id={'#nav-'+subject.exam_subject_id} role=\"tab\"\r\n                onClick={tabSelected}\r\n            >\r\n                {subject.course_title}\r\n            </div>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <nav id=\"exam-tabs\" className=\"clearfix\">\r\n            <ul className=\"nav nav-tabs float-left\" id=\"nav-tab\" role=\"tablist\" >\r\n                {tabs}\r\n            </ul>\r\n            <div className=\"float-right py-2\">\r\n                <b >Exam No: <span id=\"exam-no\">{Data.data.exam_no}</span></b>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentTab: state.current_tab\r\n});\r\n\r\nexport default connect(mapStateToProps)(examTab);\r\n\r\n\r\n\r\n","import Data from '../../../config/startup'\r\nimport K from '../../../config/k'\r\nimport {connect} from 'react-redux'\r\nimport SubjectPage from './subject_page'\r\n\r\nvar gProps;\r\n\r\nconst isAttempted = (question_id, tabIndex) => {\r\n    var subjectData = gProps.all_exam_subjects_state_data[tabIndex];\r\n    if(!subjectData) return false;\r\n    var attempt = subjectData.attempted_questions[question_id];\r\n    if(!attempt) return false;\r\n    return (attempt.attempt) ? true : false;\r\n}\r\n\r\nconst getCurrentQuestionIndex = (tabIndex) => {\r\n    let subjectData = gProps.all_exam_subjects_state_data[tabIndex];\r\n    return subjectData.current_question_index;\r\n}\r\n\r\nconst questionNoSelected = (e) => {\r\n    var question_index = e.target.attributes.getNamedItem('data-question_index').value;\r\n    \r\n    gProps.dispatch({\r\n        type: K.ACTION_QUESTION_NAVIGATED,\r\n        payload: {\r\n            question_index: question_index,\r\n            tab_index: gProps.current_tab,\r\n        }\r\n    }); \r\n}\r\n\r\nconst question = (props) => {\r\n    \r\n    gProps = props;\r\n\r\n    var questionDisplay = Data.exam_data.all_exam_subject_data.map((subject, i) => {\r\n\r\n        let questionIndex = getCurrentQuestionIndex(i);\r\n\r\n        var tiles = subject.questions.map((question, index) => {\r\n            return <li data-question_no={question.question_no}\r\n                data-question_id={question.question_id}\r\n                data-question_index={index}\r\n                className={'pointer '+((questionIndex == index)?'current':'')\r\n                    + ' '+ (isAttempted(question.question_id, props.current_tab)?'attempted':'')} \r\n                key={'tile-' + question.question_id}\r\n                onClick={questionNoSelected}\r\n            >{index + 1}</li>\r\n        });\r\n\r\n        return <div className={'tab-pane fade show '+((props.current_tab == i)?'active':'')} \r\n            id={'nav-' + subject.exam_subject_id}\r\n            role=\"tabpanel\" key={'question-' + i} >\r\n            <div className=\"question-main\">\r\n                <SubjectPage questionIndex={questionIndex} subject={subject} />\r\n            </div>\r\n            <ul className=\"question-numbers-tab list-unstyled clearfix text-center\">\r\n                {tiles}\r\n            </ul>\r\n        </div>\r\n        \r\n    });\r\n\r\n    return (\r\n        <div className=\"tab-content\" id=\"questions-content\" >\r\n            {questionDisplay}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        current_tab: state.current_tab,\r\n        all_exam_subjects_state_data: state.all_exam_subjects_state_data,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(question);\r\n","import {connect} from 'react-redux'\r\nimport K from '../../config/k'\r\nimport Data from '../../config/startup'\r\nimport examSync from '../../helpers/ExamSync'\r\n\r\nvar gProps;\r\n\r\nconst getCurrentQuestionIndex = (tabIndex) => {\r\n    let subjectData = gProps.all_exam_subjects_state_data[tabIndex];\r\n    return subjectData.current_question_index;\r\n}\r\n\r\nconst questionNoSelected = (question_index) => {\r\n    var tabIndex = gProps.current_tab;\r\n\r\n    if(question_index < 0) return;\r\n    if(question_index >= Data.exam_data.all_exam_subject_data[tabIndex]\r\n        .questions.length) return;\r\n\r\n    gProps.dispatch({\r\n        type: K.ACTION_QUESTION_NAVIGATED,\r\n        payload: {\r\n            question_index: question_index,\r\n            tab_index: tabIndex,\r\n        }\r\n    }); \r\n}\r\n\r\nconst gotoNextQuestion = (e) => {\r\n    var questionIndex = getCurrentQuestionIndex(gProps.current_tab) + 1;\r\n    questionNoSelected(questionIndex);\r\n}\r\n\r\nconst gotoPreviousQuestion = (e) => {\r\n    var questionIndex = getCurrentQuestionIndex(gProps.current_tab) - 1;\r\n    questionNoSelected(questionIndex);\r\n}\r\n\r\nconst submit = (e) => {\r\n    \r\n    if(!window.confirm('Do you want to submit and end this exam?')) return;\r\n\r\n    examSync.submit();\r\n}\r\n\r\nconst footer = (props) => {\r\n    \r\n    gProps = props;\r\n\r\n    return (\r\n        <div className=\"question-nav text-center clearfix\">\r\n            <button className=\"btn btn-primary float-left\" id=\"previous-question\"\r\n                onClick={gotoPreviousQuestion}\r\n                style={{width: '100px'}}>&laquo; Previous</button>\r\n            <button className=\"btn btn-primary float-right\" id=\"next-question\"\r\n                onClick={gotoNextQuestion}\r\n                style={{width: '100px'}}>Next &raquo;</button>\r\n            <button className=\"btn btn-primary mx-auto px-3\" id=\"stop-exam\"\r\n                onClick={submit}\r\n                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Submit and end this exam. Cannot be resumed\" >\r\n                <i className=\"fa fa-paper-plane\"></i> Submit\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        current_tab: state.current_tab,\r\n        all_exam_subjects_state_data: state.all_exam_subjects_state_data,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(footer);\r\n","import K from '../config/k'\r\nimport Data from '../config/startup'\r\n\r\nclass ExamSync{\r\n\r\n    attemptsToUpload = {};\r\n    // attemptsUploading = {};\r\n\r\n    addAttempt(attemptData){\r\n        this.attemptsToUpload[attemptData.question_id] = attemptData;\r\n    }\r\n    \r\n    addMultiAttempts(multipleAttemtps){\r\n        for (const questionId in multipleAttemtps) {\r\n            if (Object.hasOwnProperty.call(multipleAttemtps, questionId)) {\r\n                const attempt = multipleAttemtps[questionId];\r\n                if(this.attemptsToUpload.question_id == attempt.question_id)\r\n                    continue;\r\n                this.attemptsToUpload[questionId] = attempt;\r\n            }\r\n        }\r\n    }\r\n\r\n    uploadNow(){\r\n        if(JSON.stringify(this.attemptsToUpload) === '{}'){\r\n            return;\r\n        }\r\n        var attemptsUploading = this.attemptsToUpload;\r\n        this.attemptsToUpload = {};\r\n\r\n        var data = {\r\n            'attempts': attemptsUploading,\r\n            'user_id': Data.data.user_id,\r\n            'exam_no': Data.data.exam_no,\r\n            'event_id': window.event_id,\r\n            'student_id': Data.data.student_id,\r\n            'token': Data.data.token,\r\n        }\r\n\r\n        var url = K.ADDR_ATTEMPT_QUESTION;\r\n\r\n        fetch(url, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(response => {\r\n            console.log(response); \r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('uploadNow() Success:', data);\r\n            attemptsUploading = {};\r\n        })\r\n        .catch((error) => {\r\n            console.error('uploadNow() Error:', error);\r\n            this.addMultiAttempts(attemptsUploading);\r\n        });\r\n    }\r\n\r\n    pause(){\r\n        var attemptsUploading = this.attemptsToUpload;\r\n        this.attemptsToUpload = {};\r\n\r\n        var data = {\r\n            'attempts': attemptsUploading,\r\n            'user_id': Data.data.user_id,\r\n            'exam_no': Data.data.exam_no,\r\n            'event_id': window.event_id,\r\n            'student_id': Data.data.student_id,\r\n            'token': Data.data.token,\r\n        }\r\n\r\n        fetch(K.ADDR_PAUSE_EXAM, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            attemptsUploading = {};\r\n            console.log('pause() Success:', data);\r\n            window.location.href = data.redirect ? data.redirect : K.BASE_ADDR;\r\n        })\r\n        .catch((error) => {\r\n            console.error('pause() Error:', error);\r\n            this.addMultiAttempts(attemptsUploading);\r\n        });\r\n    }\r\n\r\n    submit(){\r\n        var attemptsUploading = this.attemptsToUpload;\r\n        this.attemptsToUpload = {};\r\n\r\n        var postData = {\r\n            'attempts': attemptsUploading,\r\n            'user_id': Data.data.user_id,\r\n            'exam_no': Data.data.exam_no,\r\n            'event_id': window.event_id,\r\n            'student_id': Data.data.student_id,\r\n            'token': Data.data.token,\r\n        }\r\n\r\n        var url = K.ADDR_SUBMIT_EXAM;\r\n\r\n        fetch(url, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(postData),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            attemptsUploading = {};\r\n            console.log('submit() Success:', data);\r\n            window.location.href = K.ADDR_VIEW_EXAM_RESULT+'/'+postData.exam_no;\r\n            // if(data.redirect)\r\n            //     window.location.href = data.redirect;\r\n            // else window.location.href = K.BASE_ADDR;\r\n        })\r\n        .catch((error) => {\r\n            console.error('submit() Error:', error);\r\n            console.log(error);\r\n            this.addMultiAttempts(attemptsUploading);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst examSync = new ExamSync();\r\n\r\nexport default examSync;","import examSync from '../helpers/ExamSync'\r\n\r\nclass TimerHandler{\r\n\r\n    intervalId;\r\n    duration;\r\n    timeElapsed;\r\n    timeRemaining;\r\n\r\n    timeElapsedCallbackFn;\r\n    updateCallbackFn;\r\n\r\n    constructor(){\r\n        this.reset();\r\n    }\r\n\r\n    pingInterval = 15;\r\n    pingCounter = 0;\r\n\r\n    setUpdateCallback(updateCallbackFn) {this.updateCallbackFn = updateCallbackFn;}\r\n\r\n    start(duration, callback){ \r\n\r\n        this.timeElapsedCallbackFn = callback;\r\n        \r\n        this.duration = duration;\r\n        \r\n        this.evaluateTime();\r\n        \r\n        this.intervalId = setInterval(() => {\r\n\r\n            this.timeElapsed++;\r\n            this.pingCounter++;\r\n            \r\n            this.evaluateTime();\r\n            \r\n        }, 1000); \r\n    }\r\n    \r\n    evaluateTime(){\r\n        // console.log(\r\n        //     'Duration = '+this.duration,\r\n        //     'Time remaining = '+this.timeRemaining,\r\n        //     'Time Elapsed = '+this.timeElapsed,\r\n        // \"Timer: \"+this.timeRemaining);\r\n        \r\n        if(this.pingCounter > 15){\r\n            this.pingCounter = 0;\r\n            examSync.uploadNow();\r\n        }\r\n\r\n        \r\n        this.timeRemaining = this.duration - this.timeElapsed;\r\n        \r\n        if(this.timeRemaining < 1){\r\n            this.timeElapsedCallbackFn();\r\n            \r\n            this.stop();\r\n        }\r\n        \r\n        // if(!this.lessThan5MinsCalled && this.timeRemaining < (5 * 60)){\r\n        //     this.lessThan5MinsCalled = true;\r\n        //     // Time less than 5 minutes, turn timer color red\r\n        //     this.examTimerHooks.timeLessThan5Mins();\r\n        // }\r\n        \r\n        // if(!this.lessThan1MinCalled && this.timeRemaining < (1 * 60)){\r\n        //     this.lessThan1MinCalled = true;\r\n        //     // Time less than 1 minute, start blinking\r\n        //     this.examTimerHooks.timeLessThan1Min();\r\n        // }\r\n        // this.examTimerHooks.updateTime(K.formatTime(this.timeRemaining));\r\n        \r\n        if(this.updateCallbackFn){\r\n            this.updateCallbackFn(this.timeRemaining);\r\n        }\r\n    }\r\n\r\n\r\n    stop(){\r\n        if(this.intervalId !== 0) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n        this.reset();\r\n    }\r\n    \r\n    reset(){\r\n        this.timeElapsed = 0;\r\n        this.duration = 0;\r\n        this.intervalId = 0;\r\n        this.timeRemaining = 0;\r\n        this.timeElapsedCallbackFn = null;\r\n    }\r\n\r\n    \r\n    resume(){\r\n        this.start(this.duration, this.timeElapsedCallbackFn);\r\n    }\r\n    \r\n    pause(){\r\n        if(this.intervalId !== 0)  clearInterval(this.intervalId);\r\n    }\r\n\r\n}\r\n\r\nexport default TimerHandler;","import TimerHandler from './TimerHandler'\r\n\r\nclass ExamHandler{\r\n\r\n    attempted_questions_to_upload = [  // Contains an array of attempts\r\n        { //Attempts should look like this\r\n            exam_subject_id:'',\r\n            question_id: '',\r\n            attempt: ''\r\n        }\r\n    ];\r\n\r\n    timerHandler;\r\n\r\n    constructor(){\r\n        // console.log(\"ExamHandler constructor called, Rand \"+Math.random());\r\n        this.timerHandler = new TimerHandler();\r\n    }\r\n\r\n    addToAttemptedQuestions = (newAttempt) => {\r\n        this.attempted_questions_to_upload.filter((attempt) => {\r\n            return attempt.exam_subject_id != newAttempt.exam_subject_id\r\n                || attempt.question_id != newAttempt.question_id;\r\n        });\r\n\r\n        this.attempted_questions_to_upload.push(newAttempt);\r\n    }\r\n    \r\n}\r\n\r\nconst examHandler = new ExamHandler();\r\n\r\nexport default examHandler;","import K from '../../config/k';\r\nimport examHandler from '../../helpers/ExamHandler'\r\nimport React, { Component } from 'react'\r\n\r\nclass Timer extends Component {\r\n\r\n    constructor() {\r\n      super();\r\n      this.state = { timerString: '00:00:00' };\r\n      this.timer = 0;\r\n\r\n        this.updateTimer = this.updateTimer.bind(this);\r\n        \r\n        examHandler.timerHandler.setUpdateCallback(this.updateTimer);\r\n    }\r\n  \r\n    updateTimer(timeRemaing){\r\n        // console.log('Update timer called '+timeRemaing);\r\n        this.setState({timerString: K.formatTime(timeRemaing)});\r\n    }\r\n\r\n    render() {\r\n      return(\r\n          <>\r\n            <span id=\"timer\" className=\"ml-3\">{this.state.timerString}</span>\r\n            {/* <i className=\"fa fa-pause pointer ml-3 d-none\" \r\n                id=\"pause-exam\" data-toggle=\"tooltip\" data-placement=\"left\" \r\n                title=\"Pause this exam. You can resume later\" ></i> */}\r\n          </>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Timer","import Timer from './timer'\r\nimport K from '../../config/k'\r\nimport examSync from '../../helpers/ExamSync'\r\nimport './header.css'\r\nimport {connect} from 'react-redux'\r\nimport Data from '../../config/startup';\r\n\r\nconst HeaderRender = (props) => {\r\n\r\n    function toggleCalculator() {\r\n        props.dispatch({\r\n            type: K.ACTION_TOGGLE_CALCULATOR,\r\n            payload: {\r\n                show_calculator: !props.show_calculator,\r\n            }\r\n        })\r\n    }\r\n\r\n    function pauseExam(){\r\n        \r\n        if(!window.confirm('Do you want to submit this exam? You can still resume later')) return;\r\n\r\n        examSync.pauseExam();\r\n    }\r\n\r\n    return (\r\n    <header className=\"app-header py-2\">\r\n        <div className=\"row w-100\">\r\n            <div className=\"col-7 text-truncate text-left\">\r\n                <div className=\"pl-1\" id=\"name\">{Data.data.firstname} {Data.data.lastname}</div>\r\n            </div>\r\n            <div className=\"col-5\" >\r\n                <div align=\"right\" className=\"pr-3 clearfix\">\r\n                    <div className=\"float-right text-truncate\">\r\n                        <i className=\"fa fa-calculator toggleCalculator pointer\"\r\n                            onClick={toggleCalculator} ></i>\r\n                        <Timer />\r\n                        <i className={`fa fa-pause pointer ml-3 d-none`} onClick={pauseExam} \r\n                            id=\"pause-exam\" data-toggle=\"tooltip\" data-placement=\"left\" \r\n                            title=\"Pause/Play this exam.\" ></i>\r\n                        {/*\r\n                        <span id=\"timer\" className=\"ml-3\">00:00:00</span>\r\n                        <i className=\"fa fa-pause pointer ml-3 d-none\" \r\n                            id=\"pause-exam\" data-toggle=\"tooltip\" data-placement=\"left\" \r\n                            title=\"Pause this exam. You can resume later\" ></i>\r\n                        */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\n// export default HeaderRender;\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        show_calculator: state.show_calculator,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(HeaderRender);\r\n\r\n","\r\nclass FormatExam{\r\n\r\n    questionNo = 0;\r\n    questionIndex;\r\n\r\n    subject = { exam_subject_id:'', session_id:'', course_code:'', course_title:'',\r\n        year:'', general_instructions:'', instructions: [], passages: [],\r\n        attempted_questions: [], questions: [this.currentQuestion],\r\n    } \r\n\r\n    currentQuestion = {question_id:'',question_no:'', question:'', \r\n        option_a:'',option_b:'',option_c:'',option_d:'',option_e:''}\r\n\r\n    constructor(subject, questionIndex){\r\n        this.questionIndex = questionIndex;\r\n        this.questionNo = questionIndex + 1;\r\n        this.subject = subject;\r\n        this.currentQuestion = this.subject.questions[this.questionIndex];\r\n    }\r\n\r\n    /**@deprecated */\r\n    format() {\r\n        return <div className=\"question-main\">\r\n            <div className=\"tile text-center p-1 mb-3\">\r\n                <div className=\"tile-title question-no mb-0 shadow py-1\">\r\n                    Question {this.questionNo} of {this.subject.questions.length}\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"instruction\">{this.formatInstruction()}</div>\r\n            <div className=\"passage\">{this.formatPassage()}</div>\r\n            <div className=\"question-text\" \r\n                dangerouslySetInnerHTML={{ __html: this.currentQuestion.question }}/>\r\n\r\n            <div className=\"options\">\r\n                {this.formatOption('A', this.currentQuestion.option_a)}\r\n                {this.formatOption('B', this.currentQuestion.option_b)}\r\n                {this.formatOption('C', this.currentQuestion.option_c)}\r\n                {this.formatOption('D', this.currentQuestion.option_d)}\r\n                {this.formatOption('E', this.currentQuestion.option_e)}\r\n            </div>\r\n        </div>\r\n    }\r\n    /** @deprecated */\r\n    formatOption(option, optionText) {\r\n        \r\n        if(!optionText) return;\r\n\r\n        return <div className=\"animated-radio-button option\">\r\n            <label className=\"pointer selection\"> \r\n                <span className=\"option-letter\">{option})</span> \r\n                <input type=\"radio\" name=\"option\" data-selection=\"{option}\" /> \r\n                <span className=\"label-text\">\r\n                    <span className=\"option-text\"\r\n                        dangerouslySetInnerHTML={{ __html: optionText }}>\r\n                    </span>\r\n                </span>\r\n            </label>\r\n        </div>\r\n    }\r\n\r\n    formatInstruction() {}\r\n    formatPassage() {}\r\n\r\n    /**@deprecated */\r\n    formatQuestionText() {\r\n        return <div dangerouslySetInnerHTML={{ __html: this.currentQuestion.question }} />\r\n    }\r\n    \r\n}\r\n\r\nexport default FormatExam;","import K from '../../../config/k'\r\nimport {connect} from 'react-redux'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport class OptionComponent extends Component {\r\n\r\n    optionText;\r\n    option;\r\n    question_id;\r\n    exam_subject_id;\r\n    subject_state_data;\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    answerSelected = () => {\r\n        this.props.dispatch({\r\n            type: K.ACTION_ANSWER_SELECTED,\r\n            payload: {\r\n                'tab_index':this.props.current_tab,\r\n                'exam_subject_id':this.exam_subject_id,\r\n                'question_id':this.question_id,\r\n                'attempt':this.option,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkChanged = () => {}\r\n\r\n    getAttempt = (question_id) => {\r\n        var attempt = this.subject_state_data.attempted_questions[question_id];\r\n        if(!attempt) return;\r\n        return attempt.attempt;\r\n    }\r\n\r\n    render() {\r\n        this.optionText = this.props.optionText;\r\n        this.option = this.props.option;\r\n    \r\n        this.question_id = this.props.question_id;\r\n        this.exam_subject_id = this.props.exam_subject_id;\r\n        this.subject_state_data = this.props.all_exam_subjects_state_data[this.props.current_tab];\r\n        \r\n        if(!this.optionText) return <></>;\r\n\r\n        return (\r\n            <div className=\"animated-radio-button option pointer\" onClick={this.answerSelected}>\r\n                <label className=\"selection\"> \r\n                    <span className=\"option-letter\">{this.option})</span> \r\n                    <input type=\"radio\" name=\"option\" \r\n                        checked={((this.getAttempt(this.question_id)==this.option)?'checked':'')}\r\n                        data-selection={this.option} onChange={this.checkChanged} /> \r\n                    <span className=\"label-text\">\r\n                        <span className=\"option-text\"\r\n                            dangerouslySetInnerHTML={{ __html: K.handleExamImgs(this.optionText, this.props.subject) }}>\r\n                        </span>\r\n                    </span>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        current_tab: state.current_tab,\r\n        all_exam_subjects_state_data: state.all_exam_subjects_state_data,\r\n    }\r\n}\r\n// export default option\r\nexport default connect(mapStateToProps)(OptionComponent);\r\n","import FormatExam from '../../../helpers/FormatExam'\r\nimport Option from '../option/option'\r\nimport K from '../../../config/k'\r\nimport {connect} from 'react-redux'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport class subjectPage extends Component {\r\n\r\n    render() {\r\n        \r\n        var subject = this.props.subject;\r\n        var questionIndex = this.props.questionIndex;\r\n    \r\n        var questionNo = parseInt(questionIndex) + 1;\r\n        var currentQuestion = subject.questions[questionIndex];\r\n    \r\n        let examFormater = new FormatExam(subject, questionIndex);\r\n    \r\n        return (\r\n            <div className=\"question-main\">\r\n                <div className=\"tile text-center p-1 mb-3\">\r\n                    <div className=\"tile-title question-no mb-0 shadow py-1\">\r\n                        Question {questionNo} of {subject.questions.length}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"instruction\">{examFormater.formatInstruction()}</div>\r\n                <div className=\"passage\">{examFormater.formatPassage()}</div>\r\n                <div className=\"question-text\" \r\n                    dangerouslySetInnerHTML={{ __html: K.handleExamImgs(currentQuestion.question, subject) }}/>\r\n    \r\n                <div className=\"options\">\r\n                    \r\n                    <Option option={'A'} \r\n                        subject={subject} \r\n                        exam_subject_id={subject.exam_subject_id} \r\n                        question_id={examFormater.currentQuestion.question_id}\r\n                        optionText={examFormater.currentQuestion.option_a} />\r\n                    <Option option={'B'} \r\n                        subject={subject} \r\n                        exam_subject_id={subject.exam_subject_id} \r\n                        question_id={examFormater.currentQuestion.question_id}\r\n                        optionText={examFormater.currentQuestion.option_b} />\r\n                    <Option option={'C'} \r\n                        subject={subject} \r\n                        exam_subject_id={subject.exam_subject_id} \r\n                        question_id={examFormater.currentQuestion.question_id}\r\n                        optionText={examFormater.currentQuestion.option_c} />\r\n                    <Option option={'D'} \r\n                        subject={subject} \r\n                        exam_subject_id={subject.exam_subject_id} \r\n                        question_id={examFormater.currentQuestion.question_id}\r\n                        optionText={examFormater.currentQuestion.option_d} />\r\n                    <Option option={'E'} \r\n                        subject={subject} \r\n                        exam_subject_id={subject.exam_subject_id} \r\n                        question_id={examFormater.currentQuestion.question_id}\r\n                        optionText={examFormater.currentQuestion.option_e} />\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        current_tab: state.current_tab,\r\n        all_exam_subjects_state_data: state.all_exam_subjects_state_data,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(subjectPage);\r\n\r\n\r\n","\r\nexport const attempt_template = {\r\n    tab_index: '',\r\n    exam_subject_id:'',\r\n    question_id: '',\r\n    attempt: ''\r\n}\r\n\r\nexport const subject_data_template = {\r\n    current_question_index: 0,\r\n\r\n    attempted_questions: { //Contains question attempts with key = questiond IDs\r\n        '1':attempt_template,\r\n        '2':attempt_template,\r\n    },\r\n}\r\n\r\nexport const initialStore = {\r\n    current_tab: 0,\r\n    show_calculator: false,\r\n    /* \r\n        Content of each subject according to their tab Index.\r\n        So, tabIndex here is the key, i.e 0,1,2,3....\r\n    */\r\n    all_exam_subjects_state_data: [\r\n        JSON.parse(JSON.stringify(subject_data_template)),\r\n        JSON.parse(JSON.stringify(subject_data_template)),\r\n        JSON.parse(JSON.stringify(subject_data_template)),\r\n        JSON.parse(JSON.stringify(subject_data_template)),\r\n        JSON.parse(JSON.stringify(subject_data_template)),\r\n        //More than 5 subjects cannot be written at a time\r\n    ]\r\n}\r\n\r\n","import K from '../config/k'\r\nimport * as Templates from '../config/my_templates'\r\nimport Data from '../config/startup'\r\nimport {produce} from 'immer'\r\nimport examHandler from '../helpers/ExamHandler'\r\nimport examSync from '../helpers/ExamSync'\r\n\r\nconst getInitializedStore = () => {\r\n    \r\n    // Data.exam_data.all_exam_subject_data.map((subjectData, i) => {\r\n    Data.exam_data.all_exam_subject_data.forEach((subjectData, i) => {\r\n        Templates.initialStore.all_exam_subjects_state_data[i].attempted_questions = subjectData.attempted_questions;\r\n    });\r\n\r\n    return Templates.initialStore;\r\n}\r\n\r\nvar iStore = getInitializedStore();\r\n\r\nfunction reducer(state = iStore, action) {\r\n    var p = action.payload;\r\n    switch (action.type) {\r\n        case K.ACTION_TAB_CHANGED:\r\n            let atcNewState = {\r\n                ...state,\r\n                current_tab: action.payload.selected_tab\r\n            }\r\n            \r\n            return atcNewState;\r\n\r\n            case K.ACTION_ANSWERS_UPLOADED:\r\n                break;\r\n\r\n            case K.ACTION_ANSWER_SELECTED:\r\n                // console.log('Answer Payload', p);\r\n                let newState = produce(state, (draftState) => {\r\n                    let subjectData = draftState.all_exam_subjects_state_data[p.tab_index];\r\n                    \r\n                    if(!subjectData) return;\r\n                    \r\n                    let attempt = subjectData.attempted_questions[p.question_id];\r\n                    \r\n                    if(!attempt) attempt = {};\r\n\r\n                    // Check if user selected the exact same option\r\n                    if(attempt.attempt === p.attempt) return;\r\n                    \r\n                    attempt.exam_subject_id = p.exam_subject_id;\r\n                    attempt.question_id = p.question_id;\r\n                    attempt.attempt = p.attempt;\r\n                    \r\n                    subjectData.attempted_questions[p.question_id] = attempt;\r\n                    \r\n                    examHandler.addToAttemptedQuestions(p.attempt);\r\n                    examSync.addAttempt(p);\r\n                });\r\n                \r\n                return newState;\r\n            \r\n        case K.ACTION_QUESTION_NAVIGATED:\r\n            return produce(state, (draftState) => {\r\n                let subjectData = draftState.all_exam_subjects_state_data[p.tab_index];\r\n                \r\n                if(!subjectData) return;\r\n                \r\n                subjectData.current_question_index = p.question_index;\r\n            });\r\n\r\n        case K.ACTION_TOGGLE_CALCULATOR:\r\n            return produce(state, (draftState) => {\r\n                draftState.show_calculator = p.show_calculator;\r\n            });\r\n    \r\n        default:\r\n            return state;\r\n            \r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;\r\n\r\n","import {createStore} from 'redux'\r\nimport Reducer from './reducer'\r\n\r\n\r\nconst Store = createStore(Reducer);\r\n\r\nexport default Store;\r\n\r\n","import K from '../config/k'\r\nimport Data from '../config/startup'\r\n\r\nclass ExamActions{\r\n\r\n    gotoNextQuestion = (store) => {\r\n        let currentState = store.getState();\r\n        var questionIndex = this.getCurrentQuestionIndex(currentState) + 1;\r\n        this.questionNoSelected(store, questionIndex);\r\n    }\r\n\r\n    gotoPreviousQuestion = (store) => {\r\n        let currentState = store.getState();\r\n        var questionIndex = this.getCurrentQuestionIndex(currentState) - 1;\r\n        this.questionNoSelected(store, questionIndex);\r\n    }\r\n    \r\n    answerSelected = (store, option) => {\r\n        let currentState = store.getState();\r\n\r\n        let tabIndex = currentState.current_tab;\r\n        var questionIndex = this.getCurrentQuestionIndex(currentState);\r\n        let subject = Data.exam_data.all_exam_subject_data[tabIndex];\r\n        \r\n        let question_id = subject.questions[questionIndex].question_id;\r\n        let exam_subject_id = subject.exam_subject_id;\r\n\r\n        store.dispatch({\r\n            type: K.ACTION_ANSWER_SELECTED,\r\n            payload: {\r\n                'tab_index':currentState.current_tab,\r\n                'exam_subject_id':exam_subject_id,\r\n                'question_id':question_id,\r\n                'attempt':option,\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    getCurrentQuestionIndex = (currentState) => {\r\n        let tabIndex = currentState.current_tab;\r\n        let subjectData = currentState.all_exam_subjects_state_data[tabIndex];\r\n        return subjectData.current_question_index;\r\n    }\r\n\r\n    questionNoSelected = (store, question_index) => {\r\n        let currentState = store.getState();\r\n        var tabIndex = currentState.current_tab;\r\n        // console.log('currentState = ', currentState);\r\n        // console.log('tabIndex = ', tabIndex);\r\n        if(question_index < 0) return;\r\n        if(question_index >= Data.exam_data.all_exam_subject_data[tabIndex]\r\n            .questions.length) return;\r\n\r\n        store.dispatch({\r\n            type: K.ACTION_QUESTION_NAVIGATED,\r\n            payload: {\r\n                question_index: question_index,\r\n                tab_index: tabIndex,\r\n            }\r\n        }); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst examActions = new ExamActions();\r\n\r\nexport default examActions;","import React, { Component } from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport PageHeader from './components/header/PageHeader';\r\nimport ExamTab from './components/body/exam_tab/examTab';\r\nimport QuestionComponent from './components/body/question/question';\r\nimport FooterNav from './components/footer/footer';\r\nimport Store from './redux/store';\r\nimport Data from './config/startup';\r\nimport examHandler from './helpers/ExamHandler'\r\nimport Calculator from './components/calculator/calculator'\r\nimport './App.css';\r\nimport examSync from './helpers/ExamSync';\r\nimport examActions from './helpers/ExamActions';\r\n// import logo from './logo.svg';\r\n\r\nlet durationInSec = Data.exam_data.meta.time_remaining;\r\n\r\nexamHandler.timerHandler.start(durationInSec, () =>{\r\n  // console.log('Time Elapsed, Exam Ended');\r\n  examSync.submit();\r\n});\r\n\r\nclass App extends Component{\r\n\r\n  \r\n  componentDidMount(){\r\n    document.addEventListener(\"keyup\", this.keyListener, false);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"keyup\", this.keyListener, false);\r\n  }\r\n  \r\n  keyListener(e) {\r\n    console.log(\"Keylistener\", e, e.key);\r\n    // if(!e.key) return;\r\n    // this.handleKeyPresses(Store.getState(), e.key);\r\n    let keyUpperCase = e.key;\r\n    // let props = Store;\r\n    \r\n    switch (keyUpperCase) {\r\n      case 'A':case 'a':\r\n        examActions.answerSelected(Store, 'A');\r\n        break;\r\n      case 'B':case 'b':\r\n        examActions.answerSelected(Store, 'B');\r\n        break;\r\n      case 'C':case 'c':\r\n        examActions.answerSelected(Store, 'C');\r\n        break;\r\n      case 'D':case 'd':\r\n        examActions.answerSelected(Store, 'D');\r\n        break;\r\n      case 'P':case 'p':\r\n        examActions.gotoPreviousQuestion(Store);\r\n        break;\r\n      case 'N':case 'n':\r\n        examActions.gotoNextQuestion(Store);\r\n        break;\r\n      case 'S':case 's':\r\n        if(!window.confirm('Do you want to submit and end this exam?')) return;\r\n        examSync.submit();\r\n        break;\r\n      case 'R':case 'r':\r\n        console.log('R clicked');\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log('Store.current_tab = ',Store.getState());\r\n    return (\r\n      <Provider store={Store}>\r\n        <PageHeader/>\r\n        <div className=\"container-fluid\" style={{marginTop: '85px'}} \r\n          id=\"exam-base-container\" >\r\n          <div id=\"exam-layout\" >\r\n            <ExamTab />\r\n            <QuestionComponent />\r\n            <FooterNav />\r\n          </div>\r\n          <Calculator />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n  \r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}